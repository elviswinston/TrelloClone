//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectManagement.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DbProjectManagement : DbContext
    {
        public DbProjectManagement()
            : base("name=DbProjectManagement")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Board> Boards { get; set; }
        public virtual DbSet<Card> Cards { get; set; }
        public virtual DbSet<List> Lists { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
    
        public virtual int sp_CreateList(string name, Nullable<int> boardId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("boardId", boardId) :
                new ObjectParameter("boardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateList", nameParameter, boardIdParameter);
        }
    
        public virtual ObjectResult<sp_GetAccount_Result> sp_GetAccount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAccount_Result>("sp_GetAccount");
        }
    
        public virtual ObjectResult<sp_GetAccountByEmail_Result> sp_GetAccountByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAccountByEmail_Result>("sp_GetAccountByEmail", emailParameter);
        }
    
        public virtual ObjectResult<sp_GetAllListByBoardID_Result> sp_GetAllListByBoardID(Nullable<int> boardId)
        {
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("boardId", boardId) :
                new ObjectParameter("boardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllListByBoardID_Result>("sp_GetAllListByBoardID", boardIdParameter);
        }
    
        public virtual ObjectResult<sp_GetBoard_Result> sp_GetBoard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetBoard_Result>("sp_GetBoard");
        }
    
        public virtual ObjectResult<sp_GetBoardByName_Result> sp_GetBoardByName(string boardName)
        {
            var boardNameParameter = boardName != null ?
                new ObjectParameter("boardName", boardName) :
                new ObjectParameter("boardName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetBoardByName_Result>("sp_GetBoardByName", boardNameParameter);
        }
    
        public virtual ObjectResult<sp_GetBoardByUser_Result> sp_GetBoardByUser(Nullable<int> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetBoardByUser_Result>("sp_GetBoardByUser", accountIdParameter);
        }
    
        public virtual int sp_CreateCard(string title, Nullable<int> listId)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var listIdParameter = listId.HasValue ?
                new ObjectParameter("listId", listId) :
                new ObjectParameter("listId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateCard", titleParameter, listIdParameter);
        }
    
        public virtual ObjectResult<sp_GetAllCardByListId_Result> sp_GetAllCardByListId(Nullable<int> listId)
        {
            var listIdParameter = listId.HasValue ?
                new ObjectParameter("listId", listId) :
                new ObjectParameter("listId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllCardByListId_Result>("sp_GetAllCardByListId", listIdParameter);
        }
    
        public virtual ObjectResult<sp_GetBoardById_Result> sp_GetBoardById(Nullable<int> boardId)
        {
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("boardId", boardId) :
                new ObjectParameter("boardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetBoardById_Result>("sp_GetBoardById", boardIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_CreateBoard(string boardName)
        {
            var boardNameParameter = boardName != null ?
                new ObjectParameter("boardName", boardName) :
                new ObjectParameter("boardName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_CreateBoard", boardNameParameter);
        }
    
        public virtual int sp_UpdateCardDescription(Nullable<int> cardId, string desc)
        {
            var cardIdParameter = cardId.HasValue ?
                new ObjectParameter("cardId", cardId) :
                new ObjectParameter("cardId", typeof(int));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCardDescription", cardIdParameter, descParameter);
        }
    
        public virtual ObjectResult<sp_GetCardById_Result> sp_GetCardById(Nullable<int> cardId)
        {
            var cardIdParameter = cardId.HasValue ?
                new ObjectParameter("cardId", cardId) :
                new ObjectParameter("cardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCardById_Result>("sp_GetCardById", cardIdParameter);
        }
    
        public virtual int sp_UpdateCardTag(Nullable<int> cardId, string tag)
        {
            var cardIdParameter = cardId.HasValue ?
                new ObjectParameter("cardId", cardId) :
                new ObjectParameter("cardId", typeof(int));
    
            var tagParameter = tag != null ?
                new ObjectParameter("tag", tag) :
                new ObjectParameter("tag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCardTag", cardIdParameter, tagParameter);
        }
    
        public virtual int sp_UpdateCardExpiry(Nullable<int> cardId, Nullable<System.DateTime> expiry)
        {
            var cardIdParameter = cardId.HasValue ?
                new ObjectParameter("cardId", cardId) :
                new ObjectParameter("cardId", typeof(int));
    
            var expiryParameter = expiry.HasValue ?
                new ObjectParameter("expiry", expiry) :
                new ObjectParameter("expiry", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCardExpiry", cardIdParameter, expiryParameter);
        }
    
        public virtual ObjectResult<sp_GetAllTaskByCardId_Result> sp_GetAllTaskByCardId(Nullable<int> cardId)
        {
            var cardIdParameter = cardId.HasValue ?
                new ObjectParameter("cardId", cardId) :
                new ObjectParameter("cardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllTaskByCardId_Result>("sp_GetAllTaskByCardId", cardIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_AddTask(Nullable<int> cardId, string taskName)
        {
            var cardIdParameter = cardId.HasValue ?
                new ObjectParameter("cardId", cardId) :
                new ObjectParameter("cardId", typeof(int));
    
            var taskNameParameter = taskName != null ?
                new ObjectParameter("taskName", taskName) :
                new ObjectParameter("taskName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_AddTask", cardIdParameter, taskNameParameter);
        }
    
        public virtual ObjectResult<sp_GetTaskById_Result> sp_GetTaskById(Nullable<int> taskId)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTaskById_Result>("sp_GetTaskById", taskIdParameter);
        }
    
        public virtual int sp_DeleteTask(Nullable<int> taskId)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteTask", taskIdParameter);
        }
    
        public virtual int sp_UpdateStatusTask(Nullable<int> taskId, Nullable<bool> status)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateStatusTask", taskIdParameter, statusParameter);
        }
    
        public virtual int sp_UpdateStatusOnTask(Nullable<int> taskId)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateStatusOnTask", taskIdParameter);
        }
    
        public virtual int sp_UpdateStatusOffTask(Nullable<int> taskId)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateStatusOffTask", taskIdParameter);
        }
    
        public virtual int sp_DeleteCard(Nullable<int> cardId)
        {
            var cardIdParameter = cardId.HasValue ?
                new ObjectParameter("cardId", cardId) :
                new ObjectParameter("cardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteCard", cardIdParameter);
        }
    
        public virtual int sp_DeleteList(Nullable<int> listId)
        {
            var listIdParameter = listId.HasValue ?
                new ObjectParameter("listId", listId) :
                new ObjectParameter("listId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteList", listIdParameter);
        }
    
        public virtual int sp_DeleteBoard(Nullable<int> boardId)
        {
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("boardId", boardId) :
                new ObjectParameter("boardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteBoard", boardIdParameter);
        }
    
        public virtual int sp_UpdateTaskName(Nullable<int> taskId, string taskName)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            var taskNameParameter = taskName != null ?
                new ObjectParameter("taskName", taskName) :
                new ObjectParameter("taskName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateTaskName", taskIdParameter, taskNameParameter);
        }
    
        public virtual int sp_UpdateCardTitle(Nullable<int> cardId, string cardTitle)
        {
            var cardIdParameter = cardId.HasValue ?
                new ObjectParameter("cardId", cardId) :
                new ObjectParameter("cardId", typeof(int));
    
            var cardTitleParameter = cardTitle != null ?
                new ObjectParameter("cardTitle", cardTitle) :
                new ObjectParameter("cardTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCardTitle", cardIdParameter, cardTitleParameter);
        }
    
        public virtual int sp_UpdateBoardName(Nullable<int> boardId, string boardName)
        {
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("boardId", boardId) :
                new ObjectParameter("boardId", typeof(int));
    
            var boardNameParameter = boardName != null ?
                new ObjectParameter("boardName", boardName) :
                new ObjectParameter("boardName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateBoardName", boardIdParameter, boardNameParameter);
        }
    
        public virtual int sp_UpdateListName(Nullable<int> listId, string listName)
        {
            var listIdParameter = listId.HasValue ?
                new ObjectParameter("listId", listId) :
                new ObjectParameter("listId", typeof(int));
    
            var listNameParameter = listName != null ?
                new ObjectParameter("listName", listName) :
                new ObjectParameter("listName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateListName", listIdParameter, listNameParameter);
        }
    
        public virtual int sp_UpdateAccountName(Nullable<int> accountId, string accountName)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("accountName", accountName) :
                new ObjectParameter("accountName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateAccountName", accountIdParameter, accountNameParameter);
        }
    
        public virtual int sp_UpdateAccountPassword(Nullable<int> accountId, string accountPassword)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            var accountPasswordParameter = accountPassword != null ?
                new ObjectParameter("accountPassword", accountPassword) :
                new ObjectParameter("accountPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateAccountPassword", accountIdParameter, accountPasswordParameter);
        }
    
        public virtual ObjectResult<sp_GetPersonalBoard_Result> sp_GetPersonalBoard(Nullable<int> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPersonalBoard_Result>("sp_GetPersonalBoard", accountIdParameter);
        }
    
        public virtual ObjectResult<sp_GetTeamBoard_Result> sp_GetTeamBoard(Nullable<int> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTeamBoard_Result>("sp_GetTeamBoard", accountIdParameter);
        }
    
        public virtual int sp_SwapList(Nullable<int> listIdA, Nullable<int> listIdB)
        {
            var listIdAParameter = listIdA.HasValue ?
                new ObjectParameter("listIdA", listIdA) :
                new ObjectParameter("listIdA", typeof(int));
    
            var listIdBParameter = listIdB.HasValue ?
                new ObjectParameter("listIdB", listIdB) :
                new ObjectParameter("listIdB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SwapList", listIdAParameter, listIdBParameter);
        }
    
        public virtual int sp_SwapCardInsideList(Nullable<int> cardIdA, Nullable<int> cardIdB)
        {
            var cardIdAParameter = cardIdA.HasValue ?
                new ObjectParameter("cardIdA", cardIdA) :
                new ObjectParameter("cardIdA", typeof(int));
    
            var cardIdBParameter = cardIdB.HasValue ?
                new ObjectParameter("cardIdB", cardIdB) :
                new ObjectParameter("cardIdB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SwapCardInsideList", cardIdAParameter, cardIdBParameter);
        }
    
        public virtual int sp_SwapCardToList(Nullable<int> cardId, Nullable<int> listId)
        {
            var cardIdParameter = cardId.HasValue ?
                new ObjectParameter("cardId", cardId) :
                new ObjectParameter("cardId", typeof(int));
    
            var listIdParameter = listId.HasValue ?
                new ObjectParameter("listId", listId) :
                new ObjectParameter("listId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SwapCardToList", cardIdParameter, listIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_RegisterAccount(string email, string password, string name)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_RegisterAccount", emailParameter, passwordParameter, nameParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_CreateProject(Nullable<int> accountId, Nullable<int> boardId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("boardId", boardId) :
                new ObjectParameter("boardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_CreateProject", accountIdParameter, boardIdParameter);
        }
    }
}
